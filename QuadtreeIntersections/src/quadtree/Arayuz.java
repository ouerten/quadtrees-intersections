
package quadtree;
import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;
import javax.swing.SwingUtilities;

public class Arayuz extends javax.swing.JFrame {

 QuadTree n1= new QuadTree();


 public static int bolge,i=0;
  
    public Arayuz() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setText("Draw");
        jButton1.setToolTipText("");
        jButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setAlignmentX(0.0F);
        jPanel2.setAlignmentY(0.0F);
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setName(""); // NOI18N
        jPanel2.setNextFocusableComponent(jPanel2);
        jPanel2.setPreferredSize(new java.awt.Dimension(512, 512));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton2.setText("Clean");
        jButton2.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setText("Radius↑");

        jTextField3.setText("Random Points↓");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        //Random butonuna basıldığında random nokta yazma ve bunu quadtreeye ekleme    
        //Girilen sayı kadar random nokta olusturma
        String b;
        b=jTextField1.getText();
        int sayac=Integer.parseInt(b);
        
        while(i<sayac)
            {
            int minx, miny, maxx, maxy;//nodeların min ve max noktaları
 
            Random r = new Random();
            int rx=r.nextInt(500); //ekran boyutuna göre x değeri al
            int ry=r.nextInt(500); //ekran boyutuna göre y değeri al
         
            //Random renk olusturma
            int rs = r.nextInt(200);
            int gs = r.nextInt(200);
            int bs = r.nextInt(200);
            Color randomColor = new Color(rs, gs, bs);
            
            n1.findzone(rx, ry);
            bolge=n1.bolge; 
            Graphics g = jPanel2.getGraphics();     
            g.setColor(randomColor);
            
            if(bolge==0){//ilki cizme   
                            
               minx=0;
               maxx=512;
               miny=0;
               maxy=512;
               n1.insert(rx, ry, minx, miny, maxx, maxy);
               g.fillArc(rx, ry, 5, 5, 0, 360);
               g.drawLine(minx, ry, maxx, ry);
               g.drawLine(rx, miny, rx, maxy);
               
            }
           else if (bolge==1){  //1.bolgeyi cizme
                
          
                minx=(int)n1.minx;
                maxx=(int)n1.prex;
                miny=(int)n1.prey;
                maxy=(int)n1.maxy;
                n1.insert(rx, ry, minx, miny, maxx, maxy);
                g.fillArc(rx, ry, 5, 5, 0, 360);
                g.drawLine((int)n1.minx, ry, (int)n1.maxx,ry );
                g.drawLine(rx, (int)n1.miny, rx, (int)n1.maxy );
  
            }
             else if(bolge==2){//2.bolgeyi cizme
            
                
                minx=(int)n1.minx;
                maxx=(int)n1.prex;
                miny=(int)n1.miny;
                maxy=(int)n1.prey;
                n1.insert(rx, ry, minx, miny, maxx, maxy);
                g.fillArc(rx, ry, 5, 5, 0, 360);
                g.drawLine((int)n1.minx, ry, (int)n1.maxx,ry );
                g.drawLine(rx, (int)n1.miny, rx, (int)n1.maxy );
             
           }
           else if(bolge==3){//3.bolgeyi cizme
               
               minx=(int)n1.prex;
               maxx=(int)n1.maxx;
               miny=(int)n1.prey;
               maxy=(int)n1.maxy;
               n1.insert(rx, ry, minx, miny, maxx, maxy);
               g.fillArc(rx, ry, 5, 5, 0, 360);  
               g.drawLine((int)n1.minx, ry, (int)n1.maxx,ry );
               g.drawLine(rx, (int)n1.miny, rx, (int)n1.maxy );;
            
            }
           else if(bolge==4){//4.bolgeyi cizme
                
               minx=(int)n1.prex;
               maxx=(int)n1.maxx;
               miny=(int)n1.miny;
               maxy=(int)n1.prey;
               n1.insert(rx, ry, minx, miny, maxx, maxy);
               g.fillArc(rx, ry, 5, 5, 0, 360);
               g.drawLine((int)n1.minx, ry, (int)n1.maxx,ry );
               g.drawLine(rx, (int)n1.miny, rx, (int)n1.maxy );;
           
            }
              i++;
            }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
       
            //Mouseda bir tuşa basıldığında
            int x,y;
            x=evt.getX();
            y=evt.getY(); 
        if(SwingUtilities.isRightMouseButton(evt))
            {
                // Mouse da sağ tuşa basıldığında daire çizip içindeki noktaları bulma
                String a;
                int yaricap;
                a=jTextField1.getText();
                yaricap=Integer.parseInt(a);
                Graphics daire=jPanel2.getGraphics();
                daire.setColor(Color.yellow);
                daire.drawArc(x-(yaricap/2), y-(yaricap/2), yaricap, yaricap, 0, 360);
                n1.ara(x-yaricap/2,x+yaricap/2,y-yaricap/2,y+yaricap/2); 
                
                //Kesişen noktaları farklı renk yapma
                for (int j = 1; j < n1.dizix.length; j++) 
                {
                    daire.setColor(Color.YELLOW);
                    daire.fillArc(n1.dizix[j], n1.diziy[j], 5, 5, 0, 360);                    
                }
                
                //Kesişen noktaların sayısını ekrana yazma
                System.out.println("There are "+(n1.i-1)+" points(intersections) inside of the circle.");
                System.out.println("");
                n1.i=1;
            }
        else
        {
            //Mouse da sol tuşa basıldığında mouse'un x ve y'sine node ekleme ve ekrana yazma    
            Random r = new Random();
            int minx, miny, maxx, maxy;     
            int rs = r.nextInt(200);
            int gs = r.nextInt(200);
            int bs = r.nextInt(200);
            Color randomColor = new Color(rs, gs, bs);  
            Graphics g = jPanel2.getGraphics();
            g.setColor(randomColor);
            n1.findzone(x, y);
            bolge=n1.bolge;
            if(bolge==0)//İlki çizme 
            {   
               minx=0;
               maxx=512;
               miny=0;
               maxy=512;
               n1.insert(x, y, minx, miny, maxx, maxy);
               g.fillArc(x, y, 5, 5, 0, 360);
               g.drawLine(minx, y, maxx, y);
               g.drawLine(x, miny, x, maxy);
               
             }
             else if (bolge==1)//1.bölgeyi çizme
             {  
                
                minx=(int)n1.minx;
                maxx=(int)n1.prex;
                miny=(int)n1.prey;
                maxy=(int)n1.maxy;
                n1.insert(x, y, minx, miny, maxx, maxy);
                g.fillArc(x, y, 5, 5, 0, 360);
                g.drawLine((int)n1.minx, y, (int)n1.maxx,y );
                g.drawLine(x, (int)n1.miny, x, (int)n1.maxy );
                 
             }
             else if(bolge==2)//2.bölgeyi çizme
             {
                        
                minx=(int)n1.minx;
                maxx=(int)n1.prex;
                miny=(int)n1.miny;
                maxy=(int)n1.prey;
                n1.insert(x, y, minx, miny, maxx, maxy);
                g.fillArc(x, y, 5, 5, 0, 360);
                g.drawLine((int)n1.minx, y, (int)n1.maxx,y );
                g.drawLine(x, (int)n1.miny, x, (int)n1.maxy );
                
            }
            else if(bolge==3)//3.bolgeyi cizme
            {
               
               minx=(int)n1.prex;
               maxx=(int)n1.maxx;
               miny=(int)n1.prey;
               maxy=(int)n1.maxy;
               n1.insert(x, y, minx, miny, maxx, maxy);
               g.fillArc(x, y, 5, 5, 0, 360);  
               g.drawLine((int)n1.minx, y, (int)n1.maxx,y );
               g.drawLine(x, (int)n1.miny, x, (int)n1.maxy );;

            }
            else if(bolge==4)//4.bolgeyi cizme
            {
                
               minx=(int)n1.prex;
               maxx=(int)n1.maxx;
               miny=(int)n1.miny;
               maxy=(int)n1.prey;
               n1.insert(x, y, minx, miny, maxx, maxy);
               g.fillArc(x, y, 5, 5, 0, 360);
               g.drawLine((int)n1.minx, y, (int)n1.maxx,y );
               g.drawLine(x, (int)n1.miny, x, (int)n1.maxy );;
            }        
            }
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Temizle butonuna basıldığında silme işlemi yapılması
        n1.temizle();
        Graphics ad=jPanel2.getGraphics();
        ad.clearRect (0, 0, 512,512);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         
       
  
   
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Arayuz().setVisible(true);
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

  
}
